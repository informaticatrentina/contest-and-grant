Contest and grant
=================

In contest and grant project, one can create a contest. All contest must have
different name.  There are some entries related to each contest. Winners get
some grant and prices.
:author: The contest and grant Developer Team http://www.incaendo.com



Installation
------------

To setup contest and grant you have to follow some steps mentioned below:

1. Download and setup yii framework (see
   http://www.yiiframework.com/download/)

2. Checkout source code from repository into new directory
(git@git.ahref.eu:apps/contest-and-grant.git)::

    css                    contain all css file
    downloads              directory contain sub-directories for download file. You need to set permission(755 and owner www-data) to this directory. 
      entryZip               directory contain  zip file (create for download)   
    images                 contain all images used in project
    js                           contain all js file
    protected/
      components           contain all api
      config/
        Config.php         This file have configuration of project
         test.php           This file have configuration for test cases
      controllers          This directory contain all controller used in project.
      extentions           extentions directory contain all extention used in project.
      models               Bussiness logic puts here.
      runtime              Application log create in this directory
      tests                Test cases put hare.
      views/
        layout             This directory contain  layout of project.
        contest            This directory contain html page that will be rendered from contest controller
        template           This directory contain all templates
    uploads                This directory contain subdirectory to save uploaded data (images file, text file etc).
  
    index.php
    index-test.php

3. create database and change configuration
   (/protected/Config/config.php)


CONFIGURATION
-------------

1. See local_config.php_sample file
   /protected/Config/local_config.php_sample) and copy this file as
   local_config.php (/protected/Config/local_config.php)

2. Configuration changes to be done in local_config.php

    a. BASE_URL Change its value to  site base url. Caution. Do not write PROTOCOL part of url and end of url should have '/'

    b. DB_HOST
       DB_NAME
       DB_USER
       DB_PASS

       This is setting for database connection. HOST, DATABASE_NAME,
       DATABASE_USER, DATABASE_PASSWORD: replace with host, name of database,
       database user name, and password of same user. (eg. host=localhost,
       dbname=contest, username = 'root', password='123456')

    c. AGGREGATOR_API_URL The complete API url of aggregator (which contains
       api key also)

    d. IDENTITY_MANAGER_API_URL The API url of identity manager installation
       this site will use.

    e. IDM_API_KEY API key of identity manager for this site.

    f. APP_LOG_FILE_NAME The name of application log file. Log file will be
       created inside /protected/runtime/LOG_FILE_NAME

       The current name in sample file allows you to create separate log file
       for each day. If you want to create one log file and have file rotation
       on it, just use a single name (one with date function)

    g. SITE_SESSION_COOKIE_NAME Name of cookie for session id.

    h. 'language' => 'SITE_LANGUAGE'
        SITE_LANGUAGE is language in which message have to be converted. (for
        English language you can use 'en')

   i.  SITE_TITLE The name of site title.

   j.  ALLOWED_IMAGE_EXTENSION The list of allowed extenstion for upload image.
       This is define in  json format.

   k.  UPLOAD_IMAGE_SIZE_LIMIT The max size of uploading image in byte.

   l.  UPLOAD_DIRECTORY The name of upload direactory. Upload directory should be on root.

   m.  RUNTIME_DIRECTORY  The name of runtime directory. Default runtime directory
         path is '/protected/runtime'

   n.  REGISTRATION_URL   Url for register user

   p.  DOWNLOAD_ZIP_DIRECTORY  directory path to create zip file. This path is used 
       in download zip file functionality.   

   q.  SUBMISSION_IMAGE  Path where original submission's image are saved.  

   r.  ALLOWED_FILE_TYPE_FOR_HELLOFIEMME_CONTEST The list of allowed extension of upload file in 
       Hellofiemme organizer contest.
  
   s.  PDF_FILE_DIR The path of directory to save uploaded file in Hellofiemme organizer contest.  

   t. IMAGE_FOR_BANNER_SLIDE   The list of home page active banner image. List of image is define in
      json format(key : value). Key replace with contest slug and  value replace with contest banner 
      image.
      
   v. STATIC_IMAGE_FOR_BANNER_SLIDE   The list of home page static banner image. List of image is 
      define in json format(key : value). Key replace with url and value replace with static banner 
      image.

   w. HOME_PAGE_BOX_IMAGE  The list of homepage box images with respected link and caption. 
 
- Now contest and grants application is ready to run. If you want to run
  application on your local machine (apache server), you have to create
  .htaccess file on root directory(/var/www/project).  To see setting of
  .htaccess file, Please visit
  http://www.yiiframework.com/doc/guide/1.1/en/quickstart.apache-nginx-config


PHP.ini Configuration
---------------------
Following configuration need to be done in php.ini file:
        1. For image upload size:
                a. Change upload_max_filesize to 5M where 5M is 5MB. If your desired maximum upload size is 5MB.
                b. post_max_size. Default value is 8M. If you want to increase the post data max size and than change its value.

After php.ini change you need to reload apapche or the php-fpm.


Database Migration
------------------

Prerequisite:

1. You have setup the application
2. You have create a empty database
3. You have created config files. /protected/config/config.php and
   protected/config/console.php and pointed the right DB in it.

In order to migrate DB or perform DB updates run command::

    ./protected/yiic migrate

And follow instructions.


Create New Contest
-------------------
1. To create a new contest, Please go on :
   BASE_URL/contset/add
2. Fill up contest form and submit.

Only admin user can create a contest.
In order to create admin user, Please add user email id in CONTEST_ADMIN_USERS array defined in local_config.php


Requirements
------------

Contest and grant is developed on yii framework So all requirements of yii
framework must be fulfilled:

The minimum requirement by Yii is that your Web server supports PHP 5.1.0 or
above.

Please access the following URL to check if your Web server reaches the
requirements by Yii, assuming "YiiPath" is where Yii is installed.


Dependency List
---------------

PHP packages need to be installed are
        1. php5-cli
        2. php5-gd
        3. php5-curl
        4. php5-mysql
        5. php-pear
        6. phpunit

Source code
-----------

The source code is manage with ``git`` using the ``git-flow`` work-flow.

When a new release is ready the developer must increase at least the patch level
(we do not have a automatic builder/continuous integration system that use the
build number):

- Bump the version number in the file ``version.txt``
- Tag with a lightweight tag the bump version commit
- Merge the ``develop`` branch in ``master``
- Push the ``master`` branch, including the tags

For example to bump the version to ``0.0.1.0``, assuming that we start in the
``develop`` branch:

.. code:: sh

    NEW_VERSION="0.0.1.0"
    printf "%s" "${NEW_VERSION}" > version.txt
    git add version.txt
    git commit -m "Bump version to ${NEW_VERSION}"
    git tag v"${NEW_VERSION}"
    git checkout master
    git merge develop
    git push
    git push --tags


Starting with git 1.8.3 the last two command can be replaced with:

.. code:: sh

    git push --follow-tags

Deleting entries from Mongo Shell
---------------------------------

Go to entries page on site and grab the entry id you want to
delete. Entry id is the alphanum id on single entry page url.  Now
login to mongo shell and go to desired DB and run below query (should
replace ENTRY_ID with actual id):

db.entry.remove( {'_id': ObjectId('ENTRY_ID')} );


Backup and Restore
------------------

You have to backup:

- the configuration files
- the database
- the ``uploads`` directory


Run Unit Test
-------------

All unit test case are in protected/tests/unit.  To run unit test,
follow the steps given below:

.. code:: sh

   cd protected/tests
   phpunit unit


Message Translation
-------------------

For message transalation, There is need to get all message from source
code and convert it into .po file.

To get all message from php file run in the checkout root:

.. code:: sh

    ./protected/yiic message protected/messages/config.php

To get all message from js file, run in the checkout root:

.. code:: sh

    ./protected/yiic message protected/messages/jsConfig.php
  
Now run following command to convert these php file into .po file

.. code:: sh

    ./protected/yiic emessage php protected/message

